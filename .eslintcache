[{"/home/user/my-app/src/index.js":"1","/home/user/my-app/src/App.js":"2","/home/user/my-app/src/reportWebVitals.js":"3","/home/user/my-app/src/Example.js":"4","/home/user/my-app/src/PopupAddPost.js":"5","/home/user/my-app/src/PopupChangePost.js":"6","/home/user/my-app/src/DeletePost.js":"7","/home/user/my-app/src/Posts.js":"8","/home/user/my-app/src/Post.js":"9","/home/user/my-app/src/Home.js":"10","/home/user/my-app/src/DisplayOnePost.js":"11"},{"size":500,"mtime":1608722878150,"results":"12","hashOfConfig":"13"},{"size":524,"mtime":1609761325830,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608722878150,"results":"15","hashOfConfig":"13"},{"size":1235,"mtime":1608900212310,"results":"16","hashOfConfig":"13"},{"size":2337,"mtime":1609313028883,"results":"17","hashOfConfig":"13"},{"size":3278,"mtime":1609758796578,"results":"18","hashOfConfig":"13"},{"size":980,"mtime":1609339238003,"results":"19","hashOfConfig":"13"},{"size":1852,"mtime":1609763201481,"results":"20","hashOfConfig":"13"},{"size":3505,"mtime":1609762468786,"results":"21","hashOfConfig":"13"},{"size":5155,"mtime":1609761301045,"results":"22","hashOfConfig":"13"},{"size":870,"mtime":1609761246484,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"166am8r",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/user/my-app/src/index.js",[],["54","55"],"/home/user/my-app/src/App.js",["56"],"import React, { Component } from 'react';\nimport Post from './Post';\nimport './App.css';\nimport Home from './Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App(props){\n    return(  \n           <Router>\n            <Switch>\n             <Route id=\"post\" path={\"/posts/:id\"} >\n               <Post />\n              </Route>\n              <Route path=\"/\">\n               <Home />\n              </Route> \n            </Switch>\n          </Router> \n    )\n}\n\nexport default App;","/home/user/my-app/src/reportWebVitals.js",[],"/home/user/my-app/src/Example.js",[],["57","58"],"/home/user/my-app/src/PopupAddPost.js",[],"/home/user/my-app/src/PopupChangePost.js",[],"/home/user/my-app/src/DeletePost.js",["59"],"import React, { Component } from 'react'\nimport cross from './cross.jpg'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Button } from 'semantic-ui-react'\n\n    export default function DeletePost(props){\n        return (\n            <div className=\"popup\"> \n                <div onClick={() => props.closePopup()} className=\"popupBody\"></div>\n                    <div className=\"popupContent\">\n                        <div className=\"popupHeader\">\n                            <img onClick={() => props.closePopup()} className=\"cross\" alt=\"cross\" src={cross} /> \n                        </div>\n                        <div className=\"popupDelete\">\n                            <h1>Are you sure you want to delete this post?</h1>\n                            <Button onClick={() => props.handleDelete()} id=\"deleteButton\" >\n                                DELETE\n                            </Button>\n                    </div>\n                </div>\n            </div>\n        )\n}\n",["60","61"],"/home/user/my-app/src/Posts.js",["62"],"import React, { Component } from 'react'\nimport logo from './logo.svg';\nimport cross from './cross.jpg'\nimport pencil from './pencil.jpg'\nimport { Link } from \"react-router-dom\";\n\nexport default class Posts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            label: \"Нажми меня\" \n        };\n      }\n    \n \n    render() {\n        const { waitSpinner, posts,addPost,addLabel } = this.props;\n        return (\n            <div>\n                {waitSpinner && <img src={logo} className=\"App-logo\" alt=\"logo\" />}\n                <div>\n                    <p>Hello World! Todo List Wait For You!</p>\n                    <button onClick={this.addPost} className=\"addButton\">\n                        {addLabel}\n                    </button>\n                </div>\n                    {posts.map(post => (\n                       \n                            <div className=\"styleArticle\">\n                                 <div className=\"stylePosts\" key={post.id}>\n                                    <div className=\"control\" >\n                                        <img onClick={() => this.props.changePost(post.id)} className=\"pencil\" alt=\"pencil\" src={pencil} /> {/*document.event.stopPropagation(), */}\n                                        <img onClick={() => this.props.deletePost(post.id)} className=\"cross\" alt=\"cross\" src={cross} />\n                                    </div>\n                                    <Link to={\"/posts/\" + post.id }  >\n                                        <h1>{post.title}</h1>\n                                        <p>{post.body}</p>\n                                    </Link>\n                                </div>\n                            </div>\n                        \n                    ))}\n                \n            </div>\n        )\n    }\n}\n","/home/user/my-app/src/Post.js",["63","64","65","66","67"],"import axios from 'axios';\nimport React, { Component,useState } from 'react';\nimport DisplayOnePost from './DisplayOnePost';\nimport PopupChangePost from './PopupChangePost';\nimport DeletePost from './DeletePost';\nimport {\n    useHistory,\n    useParams\n  } from \"react-router-dom\";\n\n  function Post(props) {\n        const [post, setPost] = useState({\n            title: \"\",\n            body: '',\n            userId: \"\",\n            id: '',\n        });\n        const [url, setUrl] = useState('https://jsonplaceholder.typicode.com/posts');\n        const [popups, setPopups] = useState({ popupChangePost: false, popupDelete: false });\n        const [waitSpinner, setWaitSpinner] = useState(false);\n        let history = useHistory();\n        let { id } = useParams();\n        \n        React.useEffect(() => {\n            setWaitSpinner(true)\n           try {\n                const response = axios.get(url + '/' + id);\n                response.then((value) => setPost(value.data));\n                setWaitSpinner(false);\n               } catch (error) {\n                   console.error(error);\n               } \n                 \n         },[id]);\n        function deletePost(){\n            setPopups({ popupDelete: true });\n          }\n        function changePost(){\n            setPopups({ popupChangePost: true });\n          }\n        async function handleDelete(){\n            const deleteButton = document.getElementById(\"deleteButton\");\n            deleteButton.setAttribute(\"class\" , \"ui button loading\");\n  \n            try {\n                const response = await axios.delete(url + \"/\" + post.id);\n                deleteButton.removeAttribute(\"class\"); \n                closePopup();\n                history.push('/');\n            } catch (error) {\n                console.error(error);\n            } \n         }\n        async function handleChange(changePost){\n            const changeButton = document.getElementById(\"changeButton\");\n            changeButton.setAttribute(\"class\" , \"ui button loading\");\n            try {\n              const response = await axios.patch(url + \"/\" + post.id,{  \n              \"title\": changePost.title,\n              \"body\": changePost.body,\n              \"userId\": changePost.userId,\n              \"id\": changePost.id\n            });\n              changeButton.removeAttribute(\"class\");\n              setPost(changePost);              \n              closePopup();\n            } catch (error) {\n              console.error(error);\n            } \n          }  \n        function closePopup(){\n            setPopups({ popupChangePost: false, popupDelete: false });\n          }       \n        return ( \n            <div className=\"App\">\n            <header className=\"App-header\">\n                {popups.popupChangePost && (\n                    <PopupChangePost\n                        closePopup={closePopup} \n                        handleChange={handleChange}\n                        changePostId={post.id}\n                        posts={post}\n                    />\n                )}\n                {popups.popupDelete && <DeletePost \n                    closePopup={closePopup}\n                    handleDelete={handleDelete}\n                />}\n                <DisplayOnePost\n                    waitSpinner={waitSpinner} \n                    post={post}\n                    changePost={changePost}\n                    deletePost={deletePost}\n                />\n            </header>    \n            </div>\n       \n         )\n    }    \n\nexport default Post;","/home/user/my-app/src/Home.js",["68","69","70"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport  Posts  from './Posts';\nimport './App.css';\nimport PopupChangePost from './PopupChangePost';\nimport DeletePost from './DeletePost';\nimport PopupAddPost from './PopupAddPost';\n\n  class Home extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          class: \"off\", \n          addLabel: \"Add Me\",\n          hide: false,\n          popupAddPost: false,\n          posts: [],\n          waitSpinner: false,\n          popupChangePost: false,\n          popupDelete: false,\n          changePostId: \"\",\n          deleteId: ''\n      };\n      this.addPost = this.addPost.bind(this);\n      this.closePopup = this.closePopup.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.changePost = this.changePost.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.deletePost = this.deletePost.bind(this);\n      this.handleDelete = this.handleDelete.bind(this);\n    }\n    async componentDidMount(){\n      this.setState(state => ({ waitSpinner: true }));\n      const apiUrl = 'https://jsonplaceholder.typicode.com/posts';\n         try {\n              const response = await axios.get(apiUrl);\n              const posts = response.data ;\n              this.setState(state => ({posts: posts, waitSpinner: false }));\n             } catch (error) {\n                 console.error(error);\n             }   \n     }\n    addPost(){\n     this.setState(state => ({ popupAddPost: true}))\n    }\n    changePost(postId){\n      this.setState(state => ({ popupChangePost: true , changePostId: postId  }))\n    }\n    async handleChange(changePost){\n      const apiUrl = 'https://jsonplaceholder.typicode.com/posts';\n      const changeButton = document.getElementById(\"changeButton\");\n      changeButton.setAttribute(\"class\" , \"ui button loading\");\n      try {\n        const response = await axios.patch(apiUrl + \"/\" + changePost.id,{  \n        \"title\": changePost.title,\n        \"body\": changePost.body,\n        \"userId\": changePost.userId,\n        \"id\": changePost.id\n      });\n        changeButton.removeAttribute(\"class\");\n        this.setState(state => ({posts: state.posts.map(item => (item.id === changePost.id) ? changePost: item)}));\n        this.closePopup();\n      } catch (error) {\n        console.error(error);\n      } \n    } \n    async handleSubmit(addFormValue){\n      const apiUrl = 'https://jsonplaceholder.typicode.com/posts';\n      const addButton = document.getElementById(\"addButton\");\n      addButton.setAttribute(\"class\" , \"ui button loading\");\n      try {\n            const response = await axios.post(apiUrl,{  \n              \"title\": addFormValue.title,\n              \"body\": addFormValue.body,\n              \"userId\": addFormValue.userId,\n              \"id\": Date.now()\n            });\n            addButton.removeAttribute(\"class\"); \n            const posts = this.state.posts.concat(addFormValue);\n            this.setState(state => ({posts: posts}));\n            this.closePopup()\n          } catch (error) {\n              console.error(error);\n          }   \n    }\n    async handleDelete(){\n      const {  deleteId } = this.state;\n      const deleteButton = document.getElementById(\"deleteButton\");\n      deleteButton.setAttribute(\"class\" , \"ui button loading\");\n      const apiUrl = 'https://jsonplaceholder.typicode.com/posts';\n  \n      try {\n        const response = await axios.delete(apiUrl + \"/\" + deleteId);\n        deleteButton.removeAttribute(\"class\"); \n        this.setState(state => ({posts: state.posts.filter(item => item.id !== deleteId) }));\n        this.closePopup();\n      } catch (error) {\n        console.error(error);\n      } \n    }        \n    deletePost(postId){\n      this.setState(state => ({deleteId: postId, popupDelete: true}));\n    }\n    closePopup(){\n      this.setState(state => ({ popupAddPost: false, popupChangePost: false, popupDelete: false }))\n    }\n\n    render (){\n      const { addLabel,waitSpinner,posts,popupAddPost,popupChangePost,changePostId,popupDelete } = this.state\n      return(\n      <div className=\"App\">\n        <header className=\"App-header\"> \n            {popupAddPost && <PopupAddPost \n              handleSubmit={this.handleSubmit} \n              closePopup={this.closePopup} \n              addLabel={addLabel}\n              popupAddPost={popupAddPost}\n            />}\n            {popupChangePost && (\n              <PopupChangePost\n                closePopup={this.closePopup} \n                handleChange={this.handleChange}\n                changePostId={changePostId}\n                posts={posts}\n              />\n             )}\n             {popupDelete && <DeletePost \n                closePopup={this.closePopup}\n                handleDelete={this.handleDelete}\n             />}\n            <Posts \n                waitSpinner={waitSpinner} \n                posts={posts} \n                changePost={this.changePost}\n                deletePost={this.deletePost}\n                addPost={this.addPost}\n                addLabel={this.state.addLabel}\n            />\n        </header>\n      </div>\n      )\n    };\n  }\n  \n  export default Home;","/home/user/my-app/src/DisplayOnePost.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"71","replacedBy":"81"},{"ruleId":"73","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"83","line":17,"column":36,"nodeType":"77","messageId":"78","endLine":17,"endColumn":43},{"ruleId":"75","severity":1,"message":"76","line":2,"column":17,"nodeType":"77","messageId":"78","endLine":2,"endColumn":26},{"ruleId":"75","severity":1,"message":"84","line":18,"column":21,"nodeType":"77","messageId":"78","endLine":18,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":34,"column":12,"nodeType":"87","endLine":34,"endColumn":16,"suggestions":"88"},{"ruleId":"75","severity":1,"message":"89","line":46,"column":23,"nodeType":"77","messageId":"78","endLine":46,"endColumn":31},{"ruleId":"75","severity":1,"message":"89","line":58,"column":21,"nodeType":"77","messageId":"78","endLine":58,"endColumn":29},{"ruleId":"75","severity":1,"message":"89","line":54,"column":15,"nodeType":"77","messageId":"78","endLine":54,"endColumn":23},{"ruleId":"75","severity":1,"message":"89","line":72,"column":19,"nodeType":"77","messageId":"78","endLine":72,"endColumn":27},{"ruleId":"75","severity":1,"message":"89","line":93,"column":15,"nodeType":"77","messageId":"78","endLine":93,"endColumn":23},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["90"],["91"],["90"],["91"],"'addPost' is assigned a value but never used.","'setUrl' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [id, url]",{"range":"95","text":"96"},[1138,1142],"[id, url]"]